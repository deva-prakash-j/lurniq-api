name: Build and Deploy JAR To GCP

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17 (or your Spring Boot Java version)
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '17'
        distribution: 'graalvm'
        cache: 'gradle'

    - name: Configure Gradle daemon
      run: |
        mkdir -p ~/.gradle
        echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.configureondemand=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError" >> ~/.gradle/gradle.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build and test application
      run: ./gradlew clean build --parallel
      env:
        SPRING_PROFILES_ACTIVE: test
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g"
    
    - name: Verify JAR exists
      run: |
        echo "Contents of build/libs/:"
        ls -la build/libs/
        echo "JAR details:"
        file build/libs/*.jar

    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Configure Docker to use Google Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    - name: Build and push Docker image with Jib
      run: |
        ./gradlew jib -Djib.to.image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lurniq/${{ secrets.SERVICE_NAME }}:latest