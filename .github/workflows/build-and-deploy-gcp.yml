name: Build and Publish To GCP

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17 (or your Spring Boot Java version)
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle' 

    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Configure Docker to use Google Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    - name: Build and push Docker image with Jib
      run: |
        ./gradlew jib -Djib.to.image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lurniq/${{ secrets.SERVICE_NAME }}:latest

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ secrets.SERVICE_NAME }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        region: ${{ secrets.GCP_REGION }}
        image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lurniq/${{ secrets.SERVICE_NAME }}:latest
        env_vars: |
          SPRING_PROFILES_ACTIVE=prod
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_URI=${{ secrets.DB_URI }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          DDL_AUTO=${{ secrets.DDL_AUTO }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          BASE_URL=${{ secrets.BASE_URL }}
          FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }}
        flags: --min-instances=0 --max-instances=1
    - name: Show service URL
      run: 'echo "Service URL: ${{ steps.deploy.outputs.url }}"'