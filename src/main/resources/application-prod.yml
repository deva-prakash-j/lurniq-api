# Railway Production Configuration
spring:
  application:
    name: lurniq-api
  
  # Database Configuration - Railway MySQL
  datasource:
    url: ${DB_URI}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:validate}  # Use 'update' for initial deployment, then 'validate'
    show-sql: false  # Disable in production
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: false
          use_query_cache: false
  
  # OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: ${GOOGLE_REDIRECT_URI}
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id
  
  # Web Configuration
  web:
    resources:
      add-mappings: false
      cache:
        period: 31536000  # 1 year cache for static resources

# Server Configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: 
      - application/json
    min-response-size: 1024
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    accept-count: 100
    max-connections: 8192
    connection-timeout: 20000
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24 hours
  refresh-expiration: 604800000  # 7 days

# OAuth2 Configuration
oauth2:
  redirect-url: ${OAUTH2_REDIRECT_URL:http://localhost:8080/auth/success}
# Logging Configuration
logging:
  level:
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    com.zaxxer.hikari: WARN
    com.lurniq: INFO
    ROOT: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  loggers:
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    db:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
