plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.lurniq'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Optimize JAR for production
jar {
	enabled = false
	archiveClassifier = ''
}

// Production optimizations
bootJar {
	archiveFileName = 'lurniq-api.jar'
	launchScript()
}

// JVM optimization for Railway
tasks.named('bootRun') {
	jvmArgs = [
		'-Xmx512m',
		'-Xms256m',
		'-XX:+UseG1GC',
		'-XX:+UseStringDeduplication',
		'-XX:+OptimizeStringConcat',
		'-XX:+UseCompressedOops',
		'-XX:G1HeapRegionSize=8m',
		'-XX:MaxGCPauseMillis=200',
		'-XX:MaxRAMPercentage=75.0'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
